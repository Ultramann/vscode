// When contexts: https://code.visualstudio.com/api/references/when-clause-contexts
[
	{
		"key": "ctrl+shift+y",
		"command": "vim.remap",
		"when": "inputFocus && vim.mode == 'CommandlineInProgress'",
		"args": {
			"after": [
				"y",
				"y"
			]
		}
	},
	{
		"key": "space",
		"command": "vspacecode.space",
		"when": "activeEditorGroupEmpty && focusedView == '' && !whichkeyActive && !inputFocus"
	},
	{
		"key": "space",
		"command": "vspacecode.space",
		"when": "inDebugMode && !inDebugRepl && !whichkeyActive"
	},
	{
		"key": "space",
		"command": "vspacecode.space",
		"when": "sideBarFocus && !inputFocus && !whichkeyActive"
	},
	{
		"key": "tab",
		"command": "extension.vim_tab",
		"when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert' && editorLangId != 'magit'"
	},
	{
		"key": "tab",
		"command": "-extension.vim_tab",
		"when": "editorFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"
	},
	{
		"key": "x",
		"command": "magit.discard-at-point",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "l",
		"command": "git-graph.view",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "k",
		"command": "-magit.discard-at-point"
	},
	{
		"key": "-",
		"command": "magit.reverse-at-point",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "v",
		"command": "-magit.reverse-at-point"
	},
	{
		"key": "shift+-",
		"command": "magit.reverting",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "shift+v",
		"command": "-magit.reverting"
	},
	{
		"key": "shift+o",
		"command": "magit.resetting",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "y",
		"command": "vspacecode.showMagitRefMenu",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode == 'Normal'"
	},
	{
		"key": "p",
		"command": "magit.pushing",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "shift+p",
		"command": "-magit.pushing",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"command": "magit.pulling",
		"key": "f",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"command": "magit.fetching",
		"key": "shift+f",
		"when": "editorTextFocus && editorLangId == 'magit' && vim.mode =~ /^(?!SearchInProgressMode|CommandlineInProgress).*$/"
	},
	{
		"key": "ctrl+j",
		"command": "workbench.action.quickOpenSelectNext",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+k",
		"command": "workbench.action.quickOpenSelectPrevious",
		"when": "inQuickOpen"
	},
	{
		"key": "ctrl+j",
		"command": "selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+k",
		"command": "selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+l",
		"command": "acceptSelectedSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "ctrl+j",
		"command": "showNextParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "ctrl+k",
		"command": "showPrevParameterHint",
		"when": "editorFocus && parameterHintsMultipleSignatures && parameterHintsVisible"
	},
	{
		"key": "ctrl+h",
		"command": "file-browser.stepOut",
		"when": "inFileBrowser"
	},
	{
		"key": "ctrl+l",
		"command": "file-browser.stepIn",
		"when": "inFileBrowser"
	},
	// General Nav
	{
		"key": "ctrl+h",
		"command": "workbench.action.navigateLeft",
		"when": "!inQuickOpen && !suggestWidgetVisible && !parameterHintsVisible && !isInDiffEditor"
	},
	{
		"key": "ctrl+j",
		"command": "workbench.action.navigateDown",
		"when": "!inQuickOpen && !suggestWidgetVisible && !parameterHintsVisible"
	},
	{
		"key": "ctrl+k",
		"command": "workbench.action.navigateUp",
		"when": "!inQuickOpen && !suggestWidgetVisible && !parameterHintsVisible"
	},
	{
		"key": "ctrl+l",
		"command": "workbench.action.navigateRight",
		"when": "!inQuickOpen && !suggestWidgetVisible && !parameterHintsVisible && !isInDiffEditor"
	},
	// Toggle view
	{
		"key": "ctrl+b",
		"command": "workbench.action.toggleActivityBarVisibility"
	},
	{
		"key": "ctrl+space",
		"command": "workbench.action.toggleSidebarVisibility"
	},
	{
		"key": "ctrl+f",
		"command": "workbench.view.explorer"
	},
	{
		"key": "ctrl+s",
		"command": "workbench.view.search"
	},
	{
		"key": "ctrl+g",
		"command": "workbench.view.scm"
	},
	{
		"key": "ctrl+t",
		"command": "workbench.view.extension.test"
	},
	{
		"key": "ctrl+p",
		"command": "workbench.actions.view.problems"
	},
	{
		"key": "ctrl+o",
		"command": "workbench.action.output.toggleOutput"
	},
	{
		"key": "ctrl+'",
		"command": "workbench.action.closeAuxiliaryBar"
	},
	// Terminal
	{
		"key": "ctrl+;",
		"command": "workbench.action.terminal.toggleTerminal"
	},
	{
		"key": "ctrl+shift+;",
		"command": "workbench.action.createTerminalEditor"
	},
	{
		"key": "ctrl+k",
		"command": "workbench.action.terminal.focusPrevious",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+j",
		"command": "workbench.action.terminal.focusNext",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+n",
		"command": "workbench.action.terminal.focusNextPane",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+p",
		"command": "workbench.action.terminal.focusPreviousPane",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+v",
		"command": "workbench.action.terminal.split",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+d",
		"command": "workbench.action.terminal.kill",
		"when": "terminalFocus"
	},
	{
		"key": "ctrl+d",
		"command": "workbench.action.terminal.killEditor",
		"when": "terminalEditorFocus"
	},
	{
		"key": "ctrl+t",
		"command": "workbench.action.terminal.newInActiveWorkspace",
		"when": "terminalFocus"
	},
	// Debugging
	{
		"key": "c",
		"command": "workbench.action.debug.continue",
		"when": "debugState == 'stopped' && vim.mode != 'Insert' && !inDebugRepl"
	},
	{
		"key": "n",
		"command": "workbench.action.debug.stepOver",
		"when": "debugState == 'stopped' && vim.mode != 'Insert' && !inDebugRepl"
	},
	{
		"key": "s",
		"command": "workbench.action.debug.stepInto",
		"when": "debugState != 'inactive' && vim.mode != 'Insert' && !inDebugRepl"
	},
	{
		"key": "o",
		"command": "workbench.action.debug.stepOut",
		"when": "debugState == 'stopped' && vim.mode != 'Insert' && !inDebugRepl"
	},
	{
		"key": "r",
		"command": "workbench.action.debug.restart",
		"when": "inDebugMode && vim.mode != 'Insert' && !inDebugRepl"
	},
	{
		"key": "q",
		"command": "workbench.action.debug.stop",
		"when": "inDebugMode && !focusedSessionIsAttach && vim.mode != 'Insert' && !inDebugRepl"
	}
]
