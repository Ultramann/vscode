{
    // --- GENERAL ---
    // Startup
    "window.restoreFullscreen": true,
    "window.newWindowDimensions": "maximized",
    "workbench.startupEditor": "none",
    // UI
    "workbench.panel.defaultLocation": "right",
    "workbench.editor.enablePreview": false,
    "workbench.editor.showTabs": false,
    "workbench.editor.revealIfOpen": true,
    "comments.openView": "never",
    // Editor
    "editor.minimap.enabled": false,
    "files.insertFinalNewline": true,
    "files.trimTrailingWhitespace": true,
    "editor.wordWrap": "on",
    "editor.quickSuggestions": {
        "comments": "on",
        "strings": "on"
    },
    "git.autofetch": true,
    // Explorer
    "explorer.confirmDelete": false,
    "explorer.confirmDragAndDrop": false,
    // Terminal
    "terminal.integrated.defaultProfile.osx": "bash",
    "terminal.integrated.enableMultiLinePasteWarning": false,
    // Debugging
    "debug.internalConsoleOptions": "neverOpen",
    // --- LANGUAGES ---
    // Python
    "python.testing.pytestEnabled": true,
    "python.testing.unittestEnabled": false,
    "python.formatting.provider": "black",
    "python.formatting.blackArgs": [
        "--line-length",
        "100"
    ],
    "python.testing.pytestArgs": [
        "--no-cov",
        "-vv",
        "."
    ],
    // Golang
    "go.toolsManagement.autoUpdate": true,
    "go.enableCodeLens": {
        "runtest": false
    },
    // Yaml
    "yaml.schemas": {
        "https://json.schemastore.org/github-workflow.json": "**/.github/workflows/*",
        "file:///Users/carygoltermann/.vscode/extensions/atlassian.atlascode-3.0.2/resources/schemas/pipelines-schema.json": "bitbucket-pipelines.yml"
    },
    // Markdown
    "[markdown]": {
        "files.trimTrailingWhitespace": false
    },
    "files.associations": {
        "*.mdx": "markdown"
    },
    // Date & Time
    "dateTime.customFormat": "ddd MMM Do   h:mm a",
    // Todo
    "todo.colors.project": "#eecd28",
    "todo.colors.projectStatistics": "#58a6ff",
    "todo.colors.done": "#6ff581",
    "todo.colors.cancelled": "#fa5d51",
    "todo.colors.code": "#79c0ff",
    "todo.colors.tag": "#7b97c4",
    // Vim
    "vim.sneak": true,
    "vim.sneakUseIgnorecaseAndSmartcase": true,
    "vim.hlsearch": true,
    "vim.visualstar": true,
    "vim.easymotion": true,
    "vim.useSystemClipboard": true,
    // WhichKey
    "whichkey.delay": 250,
    "whichkey.sortOrder": "typeThenCustom",
    // Project Manager
    "projectManager.projectsLocation": "/Users/carygoltermann/.vscode",
    "projectManager.sortList": "Recent",
    "projectManager.tags": [
        "Personal",
        "Platform",
        "Devops",
        "Random"
    ],
    // Git Graph
    "git-graph.repository.onLoad.showCheckedOutBranch": true,
    // Github
    "githubPullRequests.fileListLayout": "flat",
    "githubPullRequests.commentExpandState": "collapseAll",
    "githubIssues.queries": [
        {
            "label": "My Issues",
            "query": "default"
        },
        {
            "label": "Created Issues",
            "query": "author:${user} state:open repo:${owner}/${repository} sort:created-desc"
        },
        {
            "label": "Recent Issues",
            "query": "state:open repo:${owner}/${repository} sort:updated-desc"
        }
    ],
    "githubPullRequests.queries": [
        {
            "label": "Waiting For My Review",
            "query": "is:open review-requested:${user}"
        },
        {
            "label": "Assigned To Me",
            "query": "is:open assignee:${user}"
        },
        {
            "label": "Created By Me",
            "query": "is:open author:${user}"
        }
    ],
    // Misc
    "redhat.telemetry.enabled": false,
    // --- COLORS ---
    "workbench.colorTheme": "GitHub Dark Default",
    "editor.tokenColorCustomizations": {
        // Developer: Inspect Editor Tokens and Scopes
        // Developer: Generate Theme From Current Settings
        "[GitHub Dark Default]": {
            "textMateRules": [
                {
                    "scope": [
                        "magit.entity",
                        "meta.diff.range"
                    ],
                    "settings": {
                        "foreground": "#d2a8ff"
                    }
                },
                {
                    "scope": [
                        "keyword",
                        "magit.header"
                    ],
                    "settings": {
                        "foreground": "#f58379"
                    }
                },
                {
                    "scope": [
                        "variable",
                        "meta.diff.header"
                    ],
                    "settings": {
                        "foreground": "#79c0ff",
                    }
                },
                {
                    "scope": [
                        "markup.quote",
                    ],
                    "settings": {
                        "foreground": "#8b949e",
                    }
                },
                {
                    "scope": [
                        "markup.deleted",
                        "meta.diff.header.from-file",
                        "punctuation.definition.deleted"
                    ],
                    "settings": {
                        "foreground": "#fa7b70",
                    }
                },
                {
                    "scope": [
                        "markup.deleted.diff",
                        "punctuation.definition.list.begin.markdown"
                    ],
                    "settings": {
                        "foreground": "#ea8982",
                    }
                },
                {
                    "scope": [
                        "markup.inserted.diff",
                        "markup.changed.git-commit",
                        "entity.name.tag"
                    ],
                    "settings": {
                        "foreground": "#99e7a2",
                    }
                },
                {
                    "scope": "entity.name",
                    "settings": {
                        "foreground": "#f1d4a8",
                    }
                },
                {
                    "scope": "entity.name.import.go",
                    "settings": {
                        "foreground": "#c0c8d0",
                    }
                },
                {
                    "scope": "punctuation.definition.list.begin.markdown",
                    "settings": {
                        "foreground": "#f58379",
                    }
                }
            ]
        }
    },
    "editor.semanticTokenColorCustomizations": {
        "[GitHub Dark Default]": {
            "enabled": true,
            "rules": {
                "magit-ref-name": "#f1d4a8",
            }
        }
    },
    "workbench.colorCustomizations": {
        "editor.selectionHighlightBackground": "#1f2831",
        "editor.selectionHighlightBorder": "#5a5f65",
        "editor.wordHighlightBackground": "#1f2831",
        "editor.wordHighlightBorder": "#5a5f65",
        "editor.findMatchBackground": "#2a2f39",
        "editor.findMatchHighlightBackground": "#edfe0039",
        "editor.lineHighlightBackground": "#1f1f1f",
        "editorLineNumber.activeForeground": "#ffffff",
        "editorBracketHighlight.foreground1": "#c9d1d9",
        "editorBracketHighlight.foreground2": "#ffd700",
        "editorBracketHighlight.foreground3": "#da70d6",
        "editorBracketHighlight.foreground4": "#179fff",
        "editorCursor.foreground": "#d65d52",
        "editorCursor.background": "#0d1117",
        "editorBracketMatch.border": "#f58379",
        "editorGutter.modifiedBackground": "#02629d",
        "statusBar.debuggingBackground": "#f55452",
        "peekViewEditor.matchHighlightBackground": "#5a7e935d",
        "peekViewResult.matchHighlightBackground": "#edfe0039",
        "activityBar.activeBorder": "#79c0ff",
        "terminal.foreground": "#bec9d7",
        "terminal.ansiYellow": "#f1d4a8",
        "terminal.ansiGreen": "#6ff089",
        "terminal.ansiBrightRed": "#f58379"
    },
    // --- BINDINGS ---
    // Vim
    "vim.normalModeKeyBindingsNonRecursive": [
        {
            "before": [
                "<space>"
            ],
            "commands": [
                "vspacecode.space"
            ]
        },
        {
            "before": [
                ","
            ],
            "commands": [
                "vspacecode.space",
                {
                    "command": "whichkey.triggerKey",
                    "args": "m"
                }
            ]
        },
        {
            "before": [
                "R"
            ],
            "commands": [
                "editor.action.rename"
            ],
            "silent": true
        },
        {
            "before": [
                "U"
            ],
            "commands": [
                "extension.vim_ctrl+r"
            ],
            "silent": true
        },
        {
            "before": [
                "'"
            ],
            "after": [
                "`"
            ],
        },
        {
            "before": [
                "`"
            ],
            "after": [
                "'"
            ],
        },
        // Fold
        {
            "before": [
                "z",
                "c"
            ],
            "commands": [
                "editor.fold"
            ],
            "silent": true
        },
        {
            "before": [
                "z",
                "C"
            ],
            "commands": [
                "editor.foldAll"
            ],
            "silent": true
        },
        {
            "before": [
                "z",
                "o"
            ],
            "commands": [
                "editor.unfold"
            ],
            "silent": true
        },
        {
            "before": [
                "z",
                "O"
            ],
            "commands": [
                "editor.unfoldAll"
            ],
            "silent": true
        },
        // Goto
        {
            "before": [
                "g",
                "b"
            ],
            "commands": [
                "workbench.action.navigateBack"
            ],
            "when": "editorTextFocus && vim.active && vim.use<C-o> && !inDebugRepl",
            "silent": true
        },
        {
            "before": [
                "g",
                "B"
            ],
            "commands": [
                "workbench.action.navigateForward"
            ],
            "when": "editorTextFocus && vim.active && vim.use<C-o> && !inDebugRepl",
            "silent": true
        },
        {
            "before": [
                "g",
                "d"
            ],
            "commands": [
                "editor.action.revealDefinition"
            ],
            "silent": true
        },
        {
            "before": [
                "g",
                "D"
            ],
            "commands": [
                "editor.action.peekDefinition"
            ],
            "silent": true
        },
        {
            "before": [
                "g",
                "e"
            ],
            "commands": [
                "editor.action.marker.next"
            ],
            "silent": true
        },
        {
            "before": [
                "g",
                "E"
            ],
            "commands": [
                "editor.action.marker.prev"
            ],
            "silent": true
        },
        {
            "before": [
                "g",
                "f"
            ],
            "commands": [
                "editor.action.quickFix"
            ],
            "silent": true
        },
        {
            "before": [
                "g",
                "i"
            ],
            "commands": [
                "editor.action.goToImplementation"
            ],
            "silent": true
        },
        {
            "before": [
                "g",
                "r"
            ],
            "commands": [
                "editor.action.goToReferences"
            ]
        },
        {
            "before": [
                "g",
                "s"
            ],
            "commands": [
                "editor.action.showHover"
            ],
            "silent": true
        },
        {
            "before": [
                "g",
                "t"
            ],
            "commands": [
                "testing.runAtCursor"
            ],
            "silent": true
        },
        {
            "before": [
                "g",
                "T"
            ],
            "commands": [
                "testing.debugAtCursor"
            ],
            "silent": true
        },
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
        {
            "before": [
                "<space>",
            ],
            "commands": [
                "vspacecode.space"
            ],
            "when": "activeEditorGroupEmpty && focusedView == '' && !whichkeyActive && !inputFocus"
        },
        {
            "before": [
                ">"
            ],
            "commands": [
                "editor.action.indentLines"
            ]
        },
        {
            "before": [
                "<"
            ],
            "commands": [
                "editor.action.outdentLines"
            ]
        },
        {
            "before": [
                "p",
            ],
            "after": [
                "p",
                "g",
                "v",
                "y"
            ]
        }
    ],
    // Vspacecode
    // icons: https://code.visualstudio.com/api/references/icons-in-labels#icon-listing
    "vspacecode.bindingOverrides": [
        {
            "keys": [
                "."
            ],
            "position": -1
        },
        {
            "keys": "'",
            "position": -1
        },
        {
            "keys": ";",
            "position": -1
        },
        {
            "keys": "*",
            "position": -1
        },
        {
            "keys": "\t",
            "position": -1
        },
        {
            "keys": "\"",
            "position": -1
        },
        {
            "keys": "!",
            "position": -1
        },
        {
            "keys": "c",
            "position": -1
        },
        {
            "keys": "h",
            "position": -1
        },
        {
            "keys": "i",
            "position": -1
        },
        {
            "keys": "l",
            "position": -1
        },
        {
            "keys": "q",
            "position": -1
        },
        {
            "keys": "r",
            "position": -1
        },
        {
            "keys": "v",
            "position": -1
        },
        {
            "keys": "p.l",
            "position": -1
        },
        {
            "keys": "p.p",
            "position": -1
        },
        {
            "keys": "s.P",
            "position": -1
        },
        {
            "keys": "T.z",
            "position": -1
        },
        {
            "keys": "0",
            "position": -1
        },
        {
            "keys": "1",
            "position": -1
        },
        {
            "keys": "2",
            "position": -1
        },
        {
            "keys": "3",
            "position": -1
        },
        {
            "keys": "4",
            "position": -1
        },
        {
            "keys": "5",
            "position": -1
        },
        {
            "keys": "6",
            "position": -1
        },
        {
            "keys": "7",
            "position": -1
        },
        {
            "keys": "8",
            "position": -1
        },
        {
            "keys": "/",
            "type": "command",
            "name": "Search in project",
            "icon": "open-preview",
            "command": "workbench.action.findInFiles"
        },
        {
            "keys": "b.B",
            "position": -1
        },
        {
            "keys": "b.b",
            "type": "commands",
            "name": "Switch buffer",
            "icon": "files",
            "command": "workbench.action.showAllEditorsByMostRecentlyUsed"
        },
        {
            "keys": "b.l",
            "type": "commands",
            "name": "Last buffer",
            "icon": "discard",
            "commands": [
                "workbench.action.quickOpenPreviousRecentlyUsedEditorInGroup",
                "list.select"
            ]
        },
        {
            "keys": "d.i",
            "position": -1
        },
        {
            "keys": "d.n",
            "type": "commands",
            "name": "Next",
            "icon": "debug-step-over",
            "command": "workbench.action.debug.stepOver"
        },
        {
            "keys": "d.s",
            "type": "command",
            "name": "Step into",
            "icon": "debug-step-into",
            "command": "workbench.action.debug.stepInto"
        },
        {
            "keys": "f.x",
            "type": "command",
            "name": "File explorer",
            "icon": "list-tree",
            "command": "workbench.files.action.focusFilesExplorer"
        },
        {
            "keys": "f.f",
            "type": "command",
            "name": "File directory",
            "icon": "file",
            "command": "file-browser.open"
        },
        {
            "keys": "f.F",
            "type": "command",
            "name": "Format file",
            "icon": "find-replace-all",
            "command": "editor.action.formatDocument"
        },
        {
            "keys": "f.o",
            "type": "commands",
            "name": "Search files",
            "icon": "search",
            "command": "workbench.action.quickOpen"
        },
        {
            "keys": "f.s",
            "type": "commands",
            "name": "Spell check",
            "icon": "check",
            "command": "cSpell.toggleEnableSpellChecker"
        },
        {
            "keys": "f./",
            "type": "command",
            "name": "Search files",
            "icon": "search",
            "command": "workbench.action.quickOpen"
        },
        {
            "keys": "g.s",
            "position": -1
        },
        {
            "keys": "g.g",
            "type": "command",
            "name": "Status",
            "icon": "preview",
            "commands": [
                "workbench.action.files.saveAll",
                "magit.status"
            ]
        },
        {
            "keys": "j.b",
            "position": -1
        },
        {
            "keys": "j.c",
            "position": -1
        },
        {
            "keys": "j.C",
            "position": -1
        },
        {
            "keys": "j.l",
            "position": -1
        },
        {
            "keys": "j.+",
            "position": -1
        },
        {
            "keys": "j.=",
            "position": -1
        },
        {
            "keys": "j.b",
            "type": "command",
            "name": "Format buffer",
            "icon": "list-flat",
            "command": "editor.action.formatDocument"
        },
        {
            "keys": "j.f",
            "type": "command",
            "name": "Format region or buffer",
            "icon": "list-selection",
            "command": "editor.action.format"
        },
        {
            "keys": "j.j",
            "type": "command",
            "name": "Jump to line",
            "icon": "export",
            "command": "vim.remap",
            "args": {
                "after": [
                    "leader",
                    "leader",
                    "leader",
                    "b",
                    "d",
                    "j",
                    "k"
                ]
            }
        },
        {
            "keys": "s.c",
            "position": -1
        },
        {
            "keys": "s.*",
            "type": "commands",
            "name": "Search in project with selection",
            "icon": "preview",
            "commands": [
                "editor.action.addSelectionToNextFindMatch",
                "workbench.action.findInFiles",
                "search.action.focusSearchList"
            ]
        },
        {
            "keys": "s.o",
            "type": "command",
            "name": "Clear highlight",
            "icon": "clear-all",
            "command": "vim.remap",
            "args": {
                "commands": [
                    {
                        "command": ":noh"
                    }
                ]
            }
        },
        {
            "keys": "w.D",
            "position": -1
        },
        {
            "keys": "w.F",
            "position": -1
        },
        {
            "keys": "w.M",
            "position": -1
        },
        {
            "keys": "w.W",
            "position": -1
        },
        {
            "keys": "w.j",
            "position": -1
        },
        {
            "keys": "w.k",
            "position": -1
        },
        {
            "keys": "w.o",
            "position": -1
        },
        {
            "keys": "w.-",
            "position": -1
        },
        {
            "keys": "w./",
            "position": -1
        },
        {
            "keys": "w.h",
            "type": "command",
            "name": "Move editor left",
            "icon": "arrow-small-left",
            "command": "workbench.action.moveEditorToPreviousGroup"
        },
        {
            "keys": "w.l",
            "type": "command",
            "name": "Move editor right",
            "icon": "arrow-small-right",
            "command": "workbench.action.moveEditorToNextGroup"
        },
        {
            "keys": "w.w",
            "type": "command",
            "name": "Open workspace",
            "icon": "multiple-windows",
            "command": "projectManager.listProjects"
        },
        {
            "keys": "w.z",
            "type": "command",
            "name": "Combine splits",
            "icon": "combine",
            "command": "workbench.action.joinAllGroups"
        },
        {
            "keys": "n",
            "type": "bindings",
            "name": "+Notes",
            "icon": "edit",
            "bindings": [
                {
                    "key": "n",
                    "type": "command",
                    "name": "New Global",
                    "icon": "globe",
                    "command": "cmg.openNote",
                    "args": false
                },
                {
                    "key": "w",
                    "type": "command",
                    "name": "New Workspace",
                    "icon": "preview",
                    "command": "cmg.openNote",
                    "args": true
                },
            ]
        },
        {
            "keys": "t",
            "type": "bindings",
            "name": "+Todo",
            "icon": "check-all",
            "bindings": [
                {
                    "key": "t",
                    "type": "command",
                    "name": "Global todo",
                    "icon": "globe",
                    "command": "cmg.openFile",
                    "args": [
                        "notes/Todo",
                        false
                    ]
                },
                {
                    "key": "T",
                    "type": "command",
                    "name": "Project todo",
                    "icon": "note",
                    "command": "cmg.openFile",
                    "args": [
                        "Todo",
                        true
                    ]
                },
                {
                    "key": "b",
                    "type": "command",
                    "name": "Toggle box",
                    "icon": "chrome-maximize",
                    "command": "todo.toggleBox"
                },
                {
                    "key": "s",
                    "type": "command",
                    "name": "Toggle start",
                    "icon": "play",
                    "command": "todo.toggleStart"
                },
                {
                    "key": "d",
                    "type": "command",
                    "name": "Toggle done",
                    "icon": "check",
                    "command": "todo.toggleDone"
                },
                {
                    "key": "c",
                    "type": "command",
                    "name": "Toggle cancel",
                    "icon": "remove-close",
                    "command": "todo.toggleCancelled"
                },
                {
                    "key": "a",
                    "type": "command",
                    "name": "Archive",
                    "icon": "close-all",
                    "command": "todo.archive"
                }
            ]
        }
    ],
    // Jira
    "atlascode.jira.enabled": true,
    "atlascode.jira.todoIssues.enabled": false,
    "atlascode.bitbucket.enabled": false,
    "atlascode.helpExplorerEnabled": false,
    "atlascode.jira.jqlList": [
        {
            "id": "4c3c14f9-9a17-43b2-811e-eaa54516e67e",
            "enabled": true,
            "name": "My Issues",
            "query": "assignee = currentUser() AND resolution = Unresolved ORDER BY lastViewed DESC",
            "siteId": "b7c300b4-6e80-40dd-9cd4-14b7e1c7e075",
            "monitor": true
        }
    ],
    "atlascode.jira.lastCreateSiteAndProject": {
        "siteId": "b7c300b4-6e80-40dd-9cd4-14b7e1c7e075",
        "projectKey": "MLP"
    },
    "githubPullRequests.pullBranch": "never",
    // Spell Check, Must be last
    "cSpell.enabled": false
}
